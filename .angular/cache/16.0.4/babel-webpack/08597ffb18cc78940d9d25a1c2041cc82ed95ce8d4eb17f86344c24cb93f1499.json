{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nclass UiService {\n  constructor() {\n    this.showAddTask = false;\n    this.subject = new Subject();\n  }\n  toggleAddTask() {\n    console.log(\"3213\");\n    this.showAddTask = !this.showAddTask;\n    this.subject.next(this.showAddTask);\n  }\n  onToggle() {\n    return this.subject.asObservable();\n  }\n}\nUiService.ɵfac = function UiService_Factory(t) {\n  return new (t || UiService)();\n};\nUiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UiService,\n  factory: UiService.ɵfac,\n  providedIn: 'root'\n});\nexport { UiService };","map":{"version":3,"names":["Subject","UiService","constructor","showAddTask","subject","toggleAddTask","console","log","next","onToggle","asObservable","factory","ɵfac","providedIn"],"sources":["C:\\Users\\User\\OneDrive\\Рабочий стол\\angular projects\\angular-crash\\src\\app\\services\\ui.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UiService {\n\n  private showAddTask: boolean = false;\n  private subject : Subject<any> = new Subject<any>();\n\n  constructor() { }\n\n  toggleAddTask(): void {\n    console.log(\"3213\")\n    this.showAddTask = !this.showAddTask;\n    this.subject.next(this.showAddTask);\n  }\n\n  onToggle(): Observable<any> {\n    return this.subject.asObservable();\n  }\n}\n"],"mappings":"AACA,SAAqBA,OAAO,QAAQ,MAAM;;AAG1C,MAGaC,SAAS;EAKpBC,YAAA;IAHQ,KAAAC,WAAW,GAAY,KAAK;IAC5B,KAAAC,OAAO,GAAkB,IAAIJ,OAAO,EAAO;EAEnC;EAEhBK,aAAaA,CAAA;IACXC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACnB,IAAI,CAACJ,WAAW,GAAG,CAAC,IAAI,CAACA,WAAW;IACpC,IAAI,CAACC,OAAO,CAACI,IAAI,CAAC,IAAI,CAACL,WAAW,CAAC;EACrC;EAEAM,QAAQA,CAAA;IACN,OAAO,IAAI,CAACL,OAAO,CAACM,YAAY,EAAE;EACpC;;AAfWT,SAAS,C;mBAATA,SAAS;AAAA;AAATA,SAAS,C;SAATA,SAAS;EAAAU,OAAA,EAATV,SAAS,CAAAW,IAAA;EAAAC,UAAA,EAFR;AAAM;SAEPZ,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}